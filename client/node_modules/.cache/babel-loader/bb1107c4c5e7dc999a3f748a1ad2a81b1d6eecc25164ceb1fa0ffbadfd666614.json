{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\resume-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { ChromePicker } from 'react-color';\nimport './utils/pixel-perfect.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Constants handling drawing canvas directly\n  const canvasRef = useRef(null);\n  const canvasContainerRef = useRef(null);\n  const [canvasSize, setCanvasSize] = useState({\n    width: 512,\n    height: 512\n  });\n  const [scale, setScale] = useState(1);\n\n  // Constants handling drawing functions\n  const [isDrawing, setIsDrawing] = useState(false);\n  const drawSize = 3;\n  const lastPos = useRef(null);\n\n  // Constants handling colors and color changes\n  const [selectedColor, setSelectedColor] = useState('#000000'); // Init with default to black\n  const [isPickerOpen, setIsPickerOpen] = useState(false);\n\n  // Toggle color picker state\n  const togglePicker = () => {\n    setIsPickerOpen(prev => !prev);\n  };\n\n  // Handles the user selecting a color\n  const handleColorChange = color => {\n    // Update selected color for the user globally\n    setSelectedColor(color.hex);\n  };\n\n  // Helper to get mouse position\n  const getMousePos = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n\n    // Return mouse coords\n    return {\n      x: Math.floor((e.clientX - rect.left) / scale),\n      y: Math.floor((e.clientY - rect.top) / scale)\n    };\n  };\n\n  // Set isDrawing event to true\n  const startDrawing = e => {\n    // Set drawing value\n    setIsDrawing(true);\n\n    // Set up interpolation for smoother drawing\n    const {\n      x,\n      y\n    } = getMousePos(e);\n    lastPos.current = {\n      x,\n      y\n    };\n    drawAt(x, y);\n  };\n\n  // Reset isDrawing event to false\n  const endDrawing = () => {\n    // Set drawing value and reset lastPos\n    setIsDrawing(false);\n    lastPos.current = null;\n  };\n\n  // Handles the user drawing on the canvas\n  const draw = e => {\n    // Exit function if isDrawing is false\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const {\n      x,\n      y\n    } = getMousePos(e);\n\n    // Interpolation calcs (funny math that I totally for sure did without any help)\n    const prev = lastPos.current;\n    if (prev) {\n      // Get difference from current coords to lastPos\n      const dx = x - prev.x;\n      const dy = y - prev.y;\n\n      // Get a hypotenuse to fill in\n      const distance = Math.hypot(dx, dy);\n\n      // Calculate how many circles are needed to appropriately fill distance\n      const steps = Math.ceil(distance / (drawSize / 2));\n\n      // Interpolate the necessary circles\n      for (let i = 0; i <= steps; i++) {\n        const interpX = prev.x + dx * i / steps;\n        const interpY = prev.y + dy * i / steps;\n        drawAt(interpX, interpY);\n      }\n    }\n\n    // Update lastPos to current position\n    lastPos.current = {\n      x,\n      y\n    };\n  };\n\n  // Helper function for interpolation w/ circular brush\n  const drawAt = (x, y) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // More circles to fill in gaps\n    context.fillStyle = selectedColor;\n    context.beginPath();\n    context.arc(x, y, drawSize / 2, 0, 2 * Math.PI);\n    context.fill();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: \"Resume Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: canvasContainerRef,\n      className: \"canvas-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 5000,\n        height: 5000,\n        class: \"pixel-perfect\",\n        className: \"drawing-canvas\",\n        onMouseDown: startDrawing,\n        onMouseUp: endDrawing,\n        onMouseLeave: endDrawing,\n        onMouseMove: draw\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `color-picker-panel ${isPickerOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"picker-tab\",\n        onClick: togglePicker,\n        children: isPickerOpen ? '▶' : '◀'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n        color: selectedColor,\n        onChange: handleColorChange,\n        disableAlpha: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Kvx4RSHDHgNs44kuE7y7upU+Tq8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","ChromePicker","jsxDEV","_jsxDEV","App","_s","canvasRef","canvasContainerRef","canvasSize","setCanvasSize","width","height","scale","setScale","isDrawing","setIsDrawing","drawSize","lastPos","selectedColor","setSelectedColor","isPickerOpen","setIsPickerOpen","togglePicker","prev","handleColorChange","color","hex","getMousePos","e","canvas","current","rect","getBoundingClientRect","x","Math","floor","clientX","left","y","clientY","top","startDrawing","drawAt","endDrawing","draw","context","getContext","dx","dy","distance","hypot","steps","ceil","i","interpX","interpY","fillStyle","beginPath","arc","PI","fill","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","class","onMouseDown","onMouseUp","onMouseLeave","onMouseMove","onClick","onChange","disableAlpha","_c","$RefreshReg$"],"sources":["D:/Personal_Projects/resume-project/src/App.js"],"sourcesContent":["import React, { useState, useRef} from 'react';\nimport { ChromePicker } from 'react-color';\nimport './utils/pixel-perfect.js';\nimport './App.css';\n\nfunction App() {\n  // Constants handling drawing canvas directly\n  const canvasRef = useRef(null);\n  const canvasContainerRef = useRef(null);\n  const [canvasSize, setCanvasSize] = useState({ width: 512, height: 512 });\n  const [scale, setScale] = useState(1);\n\n  // Constants handling drawing functions\n  const [isDrawing, setIsDrawing] = useState(false);\n  const drawSize = 3;\n  const lastPos = useRef(null);\n\n  // Constants handling colors and color changes\n  const [selectedColor, setSelectedColor] = useState('#000000'); // Init with default to black\n  const [isPickerOpen, setIsPickerOpen] = useState(false);\n\n  // Toggle color picker state\n  const togglePicker = () => {\n    setIsPickerOpen(prev => !prev);\n  };\n\n  // Handles the user selecting a color\n  const handleColorChange = (color) => {\n    // Update selected color for the user globally\n    setSelectedColor(color.hex);\n  };\n\n  // Helper to get mouse position\n  const getMousePos = (e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n\n    // Return mouse coords\n    return {\n      x: Math.floor((e.clientX - rect.left) / scale),\n      y: Math.floor((e.clientY - rect.top) / scale)\n    };\n  };\n\n  // Set isDrawing event to true\n  const startDrawing = (e) => {\n    // Set drawing value\n    setIsDrawing(true);\n\n    // Set up interpolation for smoother drawing\n    const { x, y } = getMousePos(e);\n    lastPos.current = { x, y };\n    drawAt(x, y);\n  };\n\n  // Reset isDrawing event to false\n  const endDrawing = () => {\n    // Set drawing value and reset lastPos\n    setIsDrawing(false);\n    lastPos.current = null;\n  };\n\n  // Handles the user drawing on the canvas\n  const draw = (e) => {\n    // Exit function if isDrawing is false\n    if (!isDrawing) return;\n\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const { x, y } = getMousePos(e);\n\n    // Interpolation calcs (funny math that I totally for sure did without any help)\n    const prev = lastPos.current;\n    if(prev) {\n      // Get difference from current coords to lastPos\n      const dx = x - prev.x;\n      const dy = y - prev.y;\n      \n      // Get a hypotenuse to fill in\n      const distance = Math.hypot(dx, dy);\n\n      // Calculate how many circles are needed to appropriately fill distance\n      const steps = Math.ceil(distance / (drawSize / 2));\n\n      // Interpolate the necessary circles\n      for (let i = 0; i<= steps; i++) {\n        const interpX = prev.x + (dx * i) / steps;\n        const interpY = prev.y + (dy * i) / steps;\n        drawAt(interpX, interpY);\n      }\n    }\n\n    // Update lastPos to current position\n    lastPos.current = { x, y };\n  };\n\n  // Helper function for interpolation w/ circular brush\n  const drawAt = (x, y) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // More circles to fill in gaps\n    context.fillStyle = selectedColor;\n    context.beginPath();\n    context.arc(x, y, drawSize / 2, 0, 2 * Math.PI);\n    context.fill();\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        Resume Test\n      </header>\n      <div ref={canvasContainerRef} className=\"canvas-container\">\n        <canvas\n          ref={canvasRef}\n          width={5000}\n          height={5000}\n          class=\"pixel-perfect\"\n          className=\"drawing-canvas\"\n          onMouseDown={startDrawing}\n          onMouseUp={endDrawing}\n          onMouseLeave={endDrawing}\n          onMouseMove={draw}\n        ></canvas>\n      </div>\n      <div className={`color-picker-panel ${isPickerOpen ? 'open' : ''}`}>\n        <div className=\"picker-tab\" onClick={togglePicker}>\n          {isPickerOpen ? '▶' : '◀'}\n        </div>\n        <ChromePicker\n          color={selectedColor}\n          onChange={handleColorChange}\n          disableAlpha\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}