{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\resume-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { ChromePicker } from 'react-color';\nimport './utils/pixel-perfect.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Constants handling drawing canvas directly\n  const canvasRef = useRef(null);\n  const canvasContainerRef = useRef(null);\n  const velocity = useRef({\n    x: 0,\n    y: 0\n  });\n  const animationFrameID = useRef(null);\n  const [scale, setScale] = useState(1);\n\n  // Constants handling drawing functions\n  const [isDrawing, setIsDrawing] = useState(false);\n  const drawSize = 3;\n  const lastPos = useRef(null);\n\n  // Constants handling colors and color changes\n  const [selectedColor, setSelectedColor] = useState('#000000'); // Init with default to black\n  const [isPickerOpen, setIsPickerOpen] = useState(false);\n\n  // Center canvas wrapper on load\n  useEffect(() => {\n    const wrapper = canvasContainerRef.current;\n    if (wrapper) {\n      wrapper.scrollLeft = (canvasRef.current.width - wrapper.clientWidth) / 2;\n      wrapper.scrollTop = (canvasRef.current.height - wrapper.clientHeight) / 2;\n    }\n  }, []);\n\n  // Toggle color picker state\n  const togglePicker = () => {\n    setIsPickerOpen(prev => !prev);\n  };\n\n  // Handles the user selecting a color\n  const handleColorChange = color => {\n    // Update selected color for the user globally\n    setSelectedColor(color.hex);\n  };\n\n  // Helper to get mouse position\n  const getMousePos = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n\n    // Return mouse coords\n    return {\n      x: Math.floor((e.clientX - rect.left) / scale),\n      y: Math.floor((e.clientY - rect.top) / scale)\n    };\n  };\n\n  // Set isDrawing event to true\n  const startDrawing = e => {\n    // Set drawing value\n    setIsDrawing(true);\n\n    // Set up interpolation for smoother drawing\n    const {\n      x,\n      y\n    } = getMousePos(e);\n    lastPos.current = {\n      x,\n      y\n    };\n    drawAt(x, y);\n  };\n\n  // Reset isDrawing event to false\n  const endDrawing = () => {\n    // Set drawing value and reset lastPos\n    setIsDrawing(false);\n    lastPos.current = null;\n  };\n\n  // Handles the user drawing on the canvas\n  const draw = e => {\n    // Exit function if isDrawing is false\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const {\n      x,\n      y\n    } = getMousePos(e);\n\n    // Interpolation calcs (funny math that I totally for sure did without any help)\n    const prev = lastPos.current;\n    if (prev) {\n      // Get difference from current coords to lastPos\n      const dx = x - prev.x;\n      const dy = y - prev.y;\n\n      // Get a hypotenuse to fill in\n      const distance = Math.hypot(dx, dy);\n\n      // Calculate how many circles are needed to appropriately fill distance\n      const steps = Math.ceil(distance / (drawSize / 2));\n\n      // Interpolate the necessary circles\n      for (let i = 0; i <= steps; i++) {\n        const interpX = prev.x + dx * i / steps;\n        const interpY = prev.y + dy * i / steps;\n        drawAt(interpX, interpY);\n      }\n    }\n\n    // Update lastPos to current position\n    lastPos.current = {\n      x,\n      y\n    };\n  };\n\n  // Helper function for interpolation w/ circular brush\n  const drawAt = (x, y) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // More circles to fill in gaps\n    context.fillStyle = selectedColor;\n    context.beginPath();\n    context.arc(x, y, drawSize / 2, 0, 2 * Math.PI);\n    context.fill();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: \"Resume Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: canvasContainerRef,\n      className: \"canvas-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 5000,\n        height: 5000,\n        class: \"pixel-perfect\",\n        className: \"drawing-canvas\",\n        onMouseDown: handleMouseDown,\n        onMouseUp: handleMouseUp,\n        onMouseLeave: endDrawing,\n        onMouseMove: handleMouseMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `color-picker-panel ${isPickerOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"picker-tab\",\n        onClick: togglePicker,\n        children: isPickerOpen ? '▶' : '◀'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n        color: selectedColor,\n        onChange: handleColorChange,\n        disableAlpha: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AmdgpKF3+VBrrMnFm0YUgF7XqYs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ChromePicker","jsxDEV","_jsxDEV","App","_s","canvasRef","canvasContainerRef","velocity","x","y","animationFrameID","scale","setScale","isDrawing","setIsDrawing","drawSize","lastPos","selectedColor","setSelectedColor","isPickerOpen","setIsPickerOpen","wrapper","current","scrollLeft","width","clientWidth","scrollTop","height","clientHeight","togglePicker","prev","handleColorChange","color","hex","getMousePos","e","canvas","rect","getBoundingClientRect","Math","floor","clientX","left","clientY","top","startDrawing","drawAt","endDrawing","draw","context","getContext","dx","dy","distance","hypot","steps","ceil","i","interpX","interpY","fillStyle","beginPath","arc","PI","fill","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","class","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","onMouseLeave","onMouseMove","handleMouseMove","onClick","onChange","disableAlpha","_c","$RefreshReg$"],"sources":["D:/Personal_Projects/resume-project/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect} from 'react';\nimport { ChromePicker } from 'react-color';\nimport './utils/pixel-perfect.js';\nimport './App.css';\n\nfunction App() {\n  // Constants handling drawing canvas directly\n  const canvasRef = useRef(null);\n  const canvasContainerRef = useRef(null);\n  const velocity = useRef({ x: 0, y: 0 });\n  const animationFrameID = useRef(null);\n  const [scale, setScale] = useState(1);\n\n  // Constants handling drawing functions\n  const [isDrawing, setIsDrawing] = useState(false);\n  const drawSize = 3;\n  const lastPos = useRef(null);\n\n  // Constants handling colors and color changes\n  const [selectedColor, setSelectedColor] = useState('#000000'); // Init with default to black\n  const [isPickerOpen, setIsPickerOpen] = useState(false);\n\n  // Center canvas wrapper on load\n  useEffect(() => {\n    const wrapper = canvasContainerRef.current;\n    if (wrapper) {\n      wrapper.scrollLeft = (canvasRef.current.width - wrapper.clientWidth) / 2;\n      wrapper.scrollTop = (canvasRef.current.height - wrapper.clientHeight) / 2;\n    }\n  }, []);\n\n  // Toggle color picker state\n  const togglePicker = () => {\n    setIsPickerOpen(prev => !prev);\n  };\n\n  // Handles the user selecting a color\n  const handleColorChange = (color) => {\n    // Update selected color for the user globally\n    setSelectedColor(color.hex);\n  };\n\n  // Helper to get mouse position\n  const getMousePos = (e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n\n    // Return mouse coords\n    return {\n      x: Math.floor((e.clientX - rect.left) / scale),\n      y: Math.floor((e.clientY - rect.top) / scale)\n    };\n  };\n\n  // Set isDrawing event to true\n  const startDrawing = (e) => {\n    // Set drawing value\n    setIsDrawing(true);\n\n    // Set up interpolation for smoother drawing\n    const { x, y } = getMousePos(e);\n    lastPos.current = { x, y };\n    drawAt(x, y);\n  };\n\n  // Reset isDrawing event to false\n  const endDrawing = () => {\n    // Set drawing value and reset lastPos\n    setIsDrawing(false);\n    lastPos.current = null;\n  };\n\n  // Handles the user drawing on the canvas\n  const draw = (e) => {\n    // Exit function if isDrawing is false\n    if (!isDrawing) return;\n\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const { x, y } = getMousePos(e);\n\n    // Interpolation calcs (funny math that I totally for sure did without any help)\n    const prev = lastPos.current;\n    if(prev) {\n      // Get difference from current coords to lastPos\n      const dx = x - prev.x;\n      const dy = y - prev.y;\n      \n      // Get a hypotenuse to fill in\n      const distance = Math.hypot(dx, dy);\n\n      // Calculate how many circles are needed to appropriately fill distance\n      const steps = Math.ceil(distance / (drawSize / 2));\n\n      // Interpolate the necessary circles\n      for (let i = 0; i<= steps; i++) {\n        const interpX = prev.x + (dx * i) / steps;\n        const interpY = prev.y + (dy * i) / steps;\n        drawAt(interpX, interpY);\n      }\n    }\n\n    // Update lastPos to current position\n    lastPos.current = { x, y };\n  };\n\n  // Helper function for interpolation w/ circular brush\n  const drawAt = (x, y) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // More circles to fill in gaps\n    context.fillStyle = selectedColor;\n    context.beginPath();\n    context.arc(x, y, drawSize / 2, 0, 2 * Math.PI);\n    context.fill();\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        Resume Test\n      </header>\n      <div ref={canvasContainerRef} className=\"canvas-container\">\n        <canvas\n          ref={canvasRef}\n          width={5000}\n          height={5000}\n          class=\"pixel-perfect\"\n          className=\"drawing-canvas\"\n          onMouseDown={handleMouseDown}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={endDrawing}\n          onMouseMove={handleMouseMove}\n        />\n      </div>\n      <div className={`color-picker-panel ${isPickerOpen ? 'open' : ''}`}>\n        <div className=\"picker-tab\" onClick={togglePicker}>\n          {isPickerOpen ? '▶' : '◀'}\n        </div>\n        <ChromePicker\n          color={selectedColor}\n          onChange={handleColorChange}\n          disableAlpha\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}