{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\resume-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { ChromePicker } from 'react-color';\nimport './utils/pixel-perfect.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Constants handling drawing canvas directly\n  const canvasRef = useRef(null);\n  const canvasContainerRef = useRef(null);\n  const velocity = useRef({\n    x: 0,\n    y: 0\n  });\n  const animationFrameID = useRef(null);\n  const [scale, setScale] = useState(1);\n\n  // Constants handling drawing functions\n  const [isDrawing, setIsDrawing] = useState(false);\n  const drawSize = 3;\n  const lastPos = useRef(null);\n\n  // Constants handling colors and color changes\n  const [selectedColor, setSelectedColor] = useState('#000000'); // Init with default to black\n  const [isPickerOpen, setIsPickerOpen] = useState(false);\n\n  // Constants handling drag momentum\n  const isDragging = useRef(false);\n  const dragStart = useRef({\n    x: 0,\n    y: 0\n  });\n  const scrollStart = useRef({\n    x: 0,\n    y: 0\n  });\n  const lastDrag = useRef({\n    time: 0,\n    x: 0,\n    y: 0\n  });\n\n  //constant handling text overlay\n  const [isOverlayVisible, setIsOverlayVisible] = useState(true);\n\n  // On load actions\n  useEffect(() => {\n    // Center the canvas\n    const wrapper = canvasContainerRef.current;\n    if (wrapper) {\n      wrapper.scrollLeft = (canvasRef.current.width - wrapper.clientWidth) / 2;\n      wrapper.scrollTop = (canvasRef.current.height - wrapper.clientHeight) / 2;\n    }\n\n    // Prevent context menu\n    const preventContextMenu = e => e.preventDefault();\n    window.addEventListener(\"contextmenu\", preventContextMenu);\n    return () => window.removeEventListener(\"contextmenu\", preventContextMenu);\n  }, []);\n\n  // Toggle color picker state\n  const togglePicker = () => setIsPickerOpen(prev => !prev);\n\n  // Enable overlay toggle\n  const toggleOverlay = () => setIsOverlayVisible(prev => !prev);\n\n  // Handles the user selecting a color\n  const handleColorChange = color => {\n    // Update selected color for the user globally\n    setSelectedColor(color.hex);\n  };\n\n  // Helper to get mouse position\n  const getMousePos = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n\n    // Return mouse coords\n    return {\n      x: Math.floor((e.clientX - rect.left) / scale),\n      y: Math.floor((e.clientY - rect.top) / scale)\n    };\n  };\n\n  // Handle left/right mouse clicks\n  const handleMouseDown = e => {\n    if (e.button === 2) {\n      // Right cick\n      e.preventDefault();\n\n      // Cancel any currently active momentum immediately\n      if (animationFrameID.current !== null) {\n        cancelAnimationFrame(animationFrameID.current);\n        animationFrameID.current = null;\n      }\n      velocity.current = {\n        x: 0,\n        y: 0\n      };\n\n      // Always assume click-and-drag\n      isDragging.current = true;\n\n      // Drag timer for momentum\n      lastDrag.current = {\n        time: performance.now(),\n        x: e.clientX,\n        y: e.clientY\n      };\n\n      // Get positions to determine wrapper velocity later\n      dragStart.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n      const wrapper = canvasContainerRef.current;\n      scrollStart.current = {\n        x: wrapper.scrollLeft,\n        y: wrapper.scrollTop\n      };\n    } else if (e.button === 0) {\n      // Left click\n      startDrawing(e);\n    }\n  };\n\n  // Handle right/left click-and-drag\n  const handleMouseMove = e => {\n    if (isDragging.current) {\n      e.preventDefault();\n\n      // Get positional differences\n      const dx = e.clientX - dragStart.current.x;\n      const dy = e.clientY - dragStart.current.y;\n\n      // Set up scrolling variables to allow momentum to keep moving the canvas\n      const wrapper = canvasContainerRef.current;\n      wrapper.scrollLeft = scrollStart.current.x - dx;\n      wrapper.scrollTop = scrollStart.current.y - dy;\n\n      // Keep track of momentum through velocity\n      // Also track velocity per 16 frames(?) to properly determine momentum\n      const now = performance.now();\n      const dt = now - lastDrag.current.time || 16;\n      velocity.current = {\n        x: -((e.clientX - lastDrag.current.x) / dt * 16) * 0.5,\n        y: -((e.clientY - lastDrag.current.y) / dt * 16) * 0.5\n      };\n      lastDrag.current = {\n        time: now,\n        x: e.clientX,\n        y: e.clientY\n      };\n    } else if (e.buttons === 1) {\n      draw(e);\n    }\n  };\n\n  // Stop click-and-drag events\n  const handleMouseUp = e => {\n    if (e.button === 2) {\n      isDragging.current = false;\n\n      // Employ velocity check for a minimum threshold before applying momentum\n      const speed = Math.hypot(velocity.current.x, velocity.current.y);\n      if (speed > 3) {\n        startMomentum();\n      } else {\n        velocity.current = {\n          x: 0,\n          y: 0\n        };\n      }\n    } else if (e.button === 0) {\n      endDrawing();\n    }\n  };\n\n  // Set isDrawing event to true\n  const startDrawing = e => {\n    // Set drawing value\n    setIsDrawing(true);\n\n    // Set up interpolation for smoother drawing\n    const {\n      x,\n      y\n    } = getMousePos(e);\n    lastPos.current = {\n      x,\n      y\n    };\n    drawAt(x, y);\n  };\n\n  // Reset isDrawing event to false\n  const endDrawing = () => {\n    // Set drawing value and reset lastPos\n    setIsDrawing(false);\n    lastPos.current = null;\n  };\n\n  // Handles the user drawing on the canvas\n  const draw = e => {\n    // Exit function if isDrawing is false\n    if (!isDrawing || e.buttons !== 1) return;\n    // Interpolation calcs (funny math that I totally for sure did without any help)\n    const {\n      x,\n      y\n    } = getMousePos(e);\n    const prev = lastPos.current;\n    if (prev) {\n      // Get difference from current coords to lastPos\n      const dx = x - prev.x;\n      const dy = y - prev.y;\n\n      // Get a hypotenuse to fill in\n      const distance = Math.hypot(dx, dy);\n\n      // Calculate how many circles are needed to appropriately fill distance\n      const steps = Math.ceil(distance / (drawSize / 2));\n\n      // Interpolate the necessary circles\n      for (let i = 0; i <= steps; i++) {\n        const interpX = prev.x + dx * i / steps;\n        const interpY = prev.y + dy * i / steps;\n        drawAt(interpX, interpY);\n      }\n    }\n\n    // Update lastPos to current position\n    lastPos.current = {\n      x,\n      y\n    };\n  };\n\n  // Helper function for interpolation w/ circular brush\n  const drawAt = (x, y) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // More circles to fill in gaps\n    context.fillStyle = selectedColor;\n    context.beginPath();\n    context.arc(x, y, drawSize / 2, 0, 2 * Math.PI);\n    context.fill();\n  };\n\n  // Momentum handler\n  const startMomentum = () => {\n    const wrapper = canvasContainerRef.current;\n    let {\n      x,\n      y\n    } = velocity.current;\n\n    // Adjust to tweak downward velocity scaling\n    const step = () => {\n      x *= 0.95;\n      y *= 0.95;\n      wrapper.scrollLeft += x;\n      wrapper.scrollTop += y;\n      if (Math.abs(x) > 0.5 || Math.abs(y) > 0.5) {\n        animationFrameID.current = requestAnimationFrame(step);\n      } else {\n        cancelAnimationFrame(animationFrameID.current);\n      }\n    };\n    animationFrameID.current = requestAnimationFrame(step);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isOverlayVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `canvas-overlay ${isOverlayVisible ? 'visible' : 'hidden'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Placeholder Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `overlay-toggle-button ${isOverlayVisible ? 'inside' : 'outside'}`,\n        onClick: toggleOverlay,\n        children: isOverlayVisible ? 'Let Me Draw!' : '▶'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: canvasContainerRef,\n      className: `canvas-container ${isOverlayVisible ? 'disabled' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 5000,\n        height: 5000,\n        class: \"pixel-perfect\",\n        className: \"drawing-canvas\",\n        onMouseDown: handleMouseDown,\n        onMouseUp: handleMouseUp,\n        onMouseLeave: endDrawing,\n        onMouseMove: handleMouseMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), !isOverlayVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `color-picker-panel ${isPickerOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"picker-tab\",\n        onClick: togglePicker,\n        children: isPickerOpen ? '▶' : '◀'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n        color: selectedColor,\n        onChange: handleColorChange,\n        disableAlpha: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FcJnrHPpVd3LGB9jnoFeIkuaA2Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ChromePicker","jsxDEV","_jsxDEV","App","_s","canvasRef","canvasContainerRef","velocity","x","y","animationFrameID","scale","setScale","isDrawing","setIsDrawing","drawSize","lastPos","selectedColor","setSelectedColor","isPickerOpen","setIsPickerOpen","isDragging","dragStart","scrollStart","lastDrag","time","isOverlayVisible","setIsOverlayVisible","wrapper","current","scrollLeft","width","clientWidth","scrollTop","height","clientHeight","preventContextMenu","e","preventDefault","window","addEventListener","removeEventListener","togglePicker","prev","toggleOverlay","handleColorChange","color","hex","getMousePos","canvas","rect","getBoundingClientRect","Math","floor","clientX","left","clientY","top","handleMouseDown","button","cancelAnimationFrame","performance","now","startDrawing","handleMouseMove","dx","dy","dt","buttons","draw","handleMouseUp","speed","hypot","startMomentum","endDrawing","drawAt","distance","steps","ceil","i","interpX","interpY","context","getContext","fillStyle","beginPath","arc","PI","fill","step","abs","requestAnimationFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","class","onMouseDown","onMouseUp","onMouseLeave","onMouseMove","onChange","disableAlpha","_c","$RefreshReg$"],"sources":["D:/Personal_Projects/resume-project/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect} from 'react';\nimport { ChromePicker } from 'react-color';\nimport './utils/pixel-perfect.js';\nimport './App.css';\n\nfunction App() {\n  // Constants handling drawing canvas directly\n  const canvasRef = useRef(null);\n  const canvasContainerRef = useRef(null);\n  const velocity = useRef({ x: 0, y: 0 });\n  const animationFrameID = useRef(null);\n  const [scale, setScale] = useState(1);\n\n  // Constants handling drawing functions\n  const [isDrawing, setIsDrawing] = useState(false);\n  const drawSize = 3;\n  const lastPos = useRef(null);\n\n  // Constants handling colors and color changes\n  const [selectedColor, setSelectedColor] = useState('#000000'); // Init with default to black\n  const [isPickerOpen, setIsPickerOpen] = useState(false);\n\n  // Constants handling drag momentum\n  const isDragging = useRef(false);\n  const dragStart = useRef({ x: 0, y: 0 });\n  const scrollStart = useRef({ x: 0, y: 0 });\n  const lastDrag = useRef({ time: 0, x: 0, y: 0 });\n\n  //constant handling text overlay\n  const [isOverlayVisible, setIsOverlayVisible] = useState(true);\n\n  // On load actions\n  useEffect(() => {\n    // Center the canvas\n    const wrapper = canvasContainerRef.current;\n    if (wrapper) {\n      wrapper.scrollLeft = (canvasRef.current.width - wrapper.clientWidth) / 2;\n      wrapper.scrollTop = (canvasRef.current.height - wrapper.clientHeight) / 2;\n    }\n\n    // Prevent context menu\n    const preventContextMenu = (e) => e.preventDefault();\n    window.addEventListener(\"contextmenu\", preventContextMenu);\n    return () => window.removeEventListener(\"contextmenu\", preventContextMenu);\n  }, []);\n\n  // Toggle color picker state\n  const togglePicker = () => setIsPickerOpen(prev => !prev);\n\n  // Enable overlay toggle\n  const toggleOverlay = () => setIsOverlayVisible(prev => !prev);\n\n  // Handles the user selecting a color\n  const handleColorChange = (color) => {\n    // Update selected color for the user globally\n    setSelectedColor(color.hex);\n  };\n\n  // Helper to get mouse position\n  const getMousePos = (e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n\n    // Return mouse coords\n    return {\n      x: Math.floor((e.clientX - rect.left) / scale),\n      y: Math.floor((e.clientY - rect.top) / scale)\n    };\n  };\n\n  // Handle left/right mouse clicks\n  const handleMouseDown = (e) => {\n    if (e.button === 2) { // Right cick\n      e.preventDefault();\n\n      // Cancel any currently active momentum immediately\n      if (animationFrameID.current !== null) {\n        cancelAnimationFrame(animationFrameID.current);\n        animationFrameID.current = null;\n      }\n      velocity.current = { x: 0, y: 0 };\n\n      // Always assume click-and-drag\n      isDragging.current = true;\n\n      // Drag timer for momentum\n      lastDrag.current = { time: performance.now(), x: e.clientX, y: e.clientY };\n\n      // Get positions to determine wrapper velocity later\n      dragStart.current = { x: e.clientX, y: e.clientY };\n      const wrapper = canvasContainerRef.current;\n      scrollStart.current = { x: wrapper.scrollLeft, y: wrapper.scrollTop };\n    } else if (e.button === 0) { // Left click\n      startDrawing(e);\n    }\n  };\n\n  // Handle right/left click-and-drag\n  const handleMouseMove = (e) => {\n    if (isDragging.current) {\n      e.preventDefault();\n\n      // Get positional differences\n      const dx = e.clientX - dragStart.current.x;\n      const dy = e.clientY - dragStart.current.y;\n\n      // Set up scrolling variables to allow momentum to keep moving the canvas\n      const wrapper = canvasContainerRef.current;\n      wrapper.scrollLeft = scrollStart.current.x - dx;\n      wrapper.scrollTop = scrollStart.current.y - dy;\n\n      // Keep track of momentum through velocity\n      // Also track velocity per 16 frames(?) to properly determine momentum\n      const now = performance.now();\n      const dt = now - lastDrag.current.time || 16;\n      velocity.current = {\n        x: -((e.clientX - lastDrag.current.x) / dt * 16) * 0.5,\n        y: -((e.clientY - lastDrag.current.y) / dt * 16) * 0.5\n      };\n      lastDrag.current = { time: now, x: e.clientX, y: e.clientY };\n    } else if (e.buttons === 1) {\n      draw(e);\n    }\n  };\n\n  // Stop click-and-drag events\n  const handleMouseUp = (e) => {\n    if (e.button === 2) {\n      isDragging.current = false;\n\n      // Employ velocity check for a minimum threshold before applying momentum\n      const speed = Math.hypot(velocity.current.x, velocity.current.y);\n      if (speed > 3) {\n        startMomentum();\n      } else {\n        velocity.current = { x: 0, y: 0 };\n      }\n    } else if (e.button === 0) {\n      endDrawing();\n    }\n  };\n\n  // Set isDrawing event to true\n  const startDrawing = (e) => {\n    // Set drawing value\n    setIsDrawing(true);\n\n    // Set up interpolation for smoother drawing\n    const { x, y } = getMousePos(e);\n    lastPos.current = { x, y };\n    drawAt(x, y);\n  };\n\n  // Reset isDrawing event to false\n  const endDrawing = () => {\n    // Set drawing value and reset lastPos\n    setIsDrawing(false);\n    lastPos.current = null;\n  };\n\n  // Handles the user drawing on the canvas\n  const draw = (e) => {\n    // Exit function if isDrawing is false\n    if (!isDrawing || e.buttons !== 1) return;\n    // Interpolation calcs (funny math that I totally for sure did without any help)\n    const { x, y } = getMousePos(e);\n    const prev = lastPos.current;\n    if(prev) {\n      // Get difference from current coords to lastPos\n      const dx = x - prev.x;\n      const dy = y - prev.y;\n      \n      // Get a hypotenuse to fill in\n      const distance = Math.hypot(dx, dy);\n\n      // Calculate how many circles are needed to appropriately fill distance\n      const steps = Math.ceil(distance / (drawSize / 2));\n\n      // Interpolate the necessary circles\n      for (let i = 0; i<= steps; i++) {\n        const interpX = prev.x + (dx * i) / steps;\n        const interpY = prev.y + (dy * i) / steps;\n        drawAt(interpX, interpY);\n      }\n    }\n\n    // Update lastPos to current position\n    lastPos.current = { x, y };\n  };\n\n  // Helper function for interpolation w/ circular brush\n  const drawAt = (x, y) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // More circles to fill in gaps\n    context.fillStyle = selectedColor;\n    context.beginPath();\n    context.arc(x, y, drawSize / 2, 0, 2 * Math.PI);\n    context.fill();\n  };\n\n  // Momentum handler\n  const startMomentum = () => {\n    const wrapper = canvasContainerRef.current;\n    let { x, y } = velocity.current;\n\n    // Adjust to tweak downward velocity scaling\n    const step = () => {\n      x *= 0.95;\n      y *= 0.95;\n      wrapper.scrollLeft += x;\n      wrapper.scrollTop += y;\n\n      if(Math.abs(x) > 0.5 || Math.abs(y) > 0.5) {\n        animationFrameID.current = requestAnimationFrame(step);\n      } else {\n        cancelAnimationFrame(animationFrameID.current);\n      }\n    };\n\n    animationFrameID.current = requestAnimationFrame(step);\n  };\n\n  return (\n    <div className=\"App\">\n      {isOverlayVisible && (\n        <div className={`canvas-overlay ${isOverlayVisible ? 'visible' : 'hidden'}`}>\n          <div className=\"overlay-bar\">\n            <span>Placeholder Text</span>\n          </div>\n          <div\n            className={`overlay-toggle-button ${isOverlayVisible ? 'inside' : 'outside'}`}\n            onClick={toggleOverlay}\n          >\n            {isOverlayVisible ? 'Let Me Draw!' : '▶'}\n        </div>\n      </div>\n      )}\n      <div ref={canvasContainerRef}\n        className={`canvas-container ${isOverlayVisible ? 'disabled' : ''}`}\n      >\n        <canvas\n          ref={canvasRef}\n          width={5000}\n          height={5000}\n          class=\"pixel-perfect\"\n          className=\"drawing-canvas\"\n          onMouseDown={handleMouseDown}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={endDrawing}\n          onMouseMove={handleMouseMove}\n        />\n      </div>\n      {!isOverlayVisible && (\n        <div className={`color-picker-panel ${isPickerOpen ? 'open' : ''}`}>\n          <div className=\"picker-tab\" onClick={togglePicker}>\n            {isPickerOpen ? '▶' : '◀'}\n          </div>\n          <ChromePicker\n            color={selectedColor}\n            onChange={handleColorChange}\n            disableAlpha\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}