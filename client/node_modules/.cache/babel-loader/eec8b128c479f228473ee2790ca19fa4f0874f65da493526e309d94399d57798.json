{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\resume-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { ChromePicker } from 'react-color';\nimport './utils/pixel-perfect.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Constants handling drawing canvas directly\n  const canvasRef = useRef(null);\n  const canvasContainerRef = useRef(null);\n  const velocity = useRef({\n    x: 0,\n    y: 0\n  });\n  const animationFrameID = useRef(null);\n  const [scale, setScale] = useState(1);\n\n  // Constants handling drawing functions\n  const [isDrawing, setIsDrawing] = useState(false);\n  const drawSize = 3;\n  const lastPos = useRef(null);\n\n  // Constants handling colors and color changes\n  const [selectedColor, setSelectedColor] = useState('#000000'); // Init with default to black\n  const [isPickerOpen, setIsPickerOpen] = useState(false);\n\n  // Constants handling drag momentum\n  const isDragging = useRef(false);\n  const dragStart = useRef({\n    x: 0,\n    y: 0\n  });\n  const scrollStart = useRef({\n    x: 0,\n    y: 0\n  });\n\n  // On load actions\n  useEffect(() => {\n    // Center the canvas\n    const wrapper = canvasContainerRef.current;\n    if (wrapper) {\n      wrapper.scrollLeft = (canvasRef.current.width - wrapper.clientWidth) / 2;\n      wrapper.scrollTop = (canvasRef.current.height - wrapper.clientHeight) / 2;\n    }\n\n    // Prevent context menu\n    const preventContextMenu = e => e.preventDefault();\n    window.addEventListener(\"contextmenu\", preventContextMenu);\n    return () => window.removeEventListener(\"contextmenu\", preventContextMenu);\n  }, []);\n\n  // Toggle color picker state\n  const togglePicker = () => {\n    setIsPickerOpen(prev => !prev);\n  };\n\n  // Handles the user selecting a color\n  const handleColorChange = color => {\n    // Update selected color for the user globally\n    setSelectedColor(color.hex);\n  };\n\n  // Helper to get mouse position\n  const getMousePos = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n\n    // Return mouse coords\n    return {\n      x: Math.floor((e.clientX - rect.left) / scale),\n      y: Math.floor((e.clientY - rect.top) / scale)\n    };\n  };\n\n  // Handle left/right mouse clicks\n  const handleMouseDown = e => {\n    if (e.button === 2) {\n      // Right cick\n      e.preventDefault();\n\n      // Always assume click-and-drag\n      isDragging.current = true;\n\n      // Get positions to determine wrapper velocity later\n      dragStart.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n      const wrapper = canvasContainerRef.current;\n      scrollStart.current = {\n        x: wrapper.scrollLeft,\n        y: wrapper.scrollTop\n      };\n    } else if (e.button === 0) {\n      // Left click\n      startDrawing(e);\n    }\n  };\n\n  // Handle right/left click-and-drag\n  const handleMouseMove = e => {\n    if (isDragging.current) {\n      e.preventDefault();\n\n      // Get positional differences\n      const dx = e.clientX - dragStart.current.x;\n      const dy = e.clientY - dragStart.current.y;\n\n      // Set up scrolling variables to allow momentum to keep moving the canvas\n      const wrapper = canvasContainerRef.current;\n      wrapper.scrollLeft = scrollStart.current.x - dx;\n      wrapper.scrollTop = scrollStart.current.y - dy;\n\n      // Keep track of momentum through velocity\n      velocity.current = {\n        x: -dx,\n        y: -dy\n      };\n    } else if (e.buttons === 1) {\n      draw(e);\n    }\n  };\n\n  // Stop click-and-drag events\n  const handleMouseUp = e => {\n    if (e.button === 2) {\n      isDragging.current = false;\n      startMomentum();\n    } else if (e.button === 0) {\n      endDrawing();\n    }\n  };\n\n  // Set isDrawing event to true\n  const startDrawing = e => {\n    // Set drawing value\n    setIsDrawing(true);\n\n    // Set up interpolation for smoother drawing\n    const {\n      x,\n      y\n    } = getMousePos(e);\n    lastPos.current = {\n      x,\n      y\n    };\n    drawAt(x, y);\n  };\n\n  // Reset isDrawing event to false\n  const endDrawing = () => {\n    // Set drawing value and reset lastPos\n    setIsDrawing(false);\n    lastPos.current = null;\n  };\n\n  // Handles the user drawing on the canvas\n  const draw = e => {\n    // Exit function if isDrawing is false\n    if (!isDrawing || e.buttons !== 1) return;\n    // Interpolation calcs (funny math that I totally for sure did without any help)\n    const {\n      x,\n      y\n    } = getMousePos(e);\n    const prev = lastPos.current;\n    if (prev) {\n      // Get difference from current coords to lastPos\n      const dx = x - prev.x;\n      const dy = y - prev.y;\n\n      // Get a hypotenuse to fill in\n      const distance = Math.hypot(dx, dy);\n\n      // Calculate how many circles are needed to appropriately fill distance\n      const steps = Math.ceil(distance / (drawSize / 2));\n\n      // Interpolate the necessary circles\n      for (let i = 0; i <= steps; i++) {\n        const interpX = prev.x + dx * i / steps;\n        const interpY = prev.y + dy * i / steps;\n        drawAt(interpX, interpY);\n      }\n    }\n\n    // Update lastPos to current position\n    lastPos.current = {\n      x,\n      y\n    };\n  };\n\n  // Helper function for interpolation w/ circular brush\n  const drawAt = (x, y) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // More circles to fill in gaps\n    context.fillStyle = selectedColor;\n    context.beginPath();\n    context.arc(x, y, drawSize / 2, 0, 2 * Math.PI);\n    context.fill();\n  };\n\n  // Momentum handler\n  const startMomentum = () => {\n    const wrapper = canvasContainerRef.current;\n    let {\n      x,\n      y\n    } = velocity.current;\n\n    // Adjust to tweak downward velocity scaling\n    const step = () => {\n      x *= 0.95;\n      y *= 0.95;\n      wrapper.scrolLeft += x;\n      wrapper.scrollTop += y;\n      if (Math.abs(x) > 0.5 || Math.abs(y) > 0.5) {\n        animationFrameID.current = requestAnimationFrame(step);\n      } else {\n        cancelAnimationFrame(animationFrameID.current);\n      }\n    };\n    animationFrameID.current = requestAnimationFrame(step);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: \"Resume Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: canvasContainerRef,\n      className: \"canvas-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 5000,\n        height: 5000,\n        class: \"pixel-perfect\",\n        className: \"drawing-canvas\",\n        onMouseDown: handleMouseDown,\n        onMouseUp: handleMouseUp,\n        onMouseLeave: endDrawing,\n        onMouseMove: handleMouseMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `color-picker-panel ${isPickerOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"picker-tab\",\n        onClick: togglePicker,\n        children: isPickerOpen ? '▶' : '◀'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n        color: selectedColor,\n        onChange: handleColorChange,\n        disableAlpha: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xK5fgcMWTYp+iyLE8+/zzHCx8Ow=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ChromePicker","jsxDEV","_jsxDEV","App","_s","canvasRef","canvasContainerRef","velocity","x","y","animationFrameID","scale","setScale","isDrawing","setIsDrawing","drawSize","lastPos","selectedColor","setSelectedColor","isPickerOpen","setIsPickerOpen","isDragging","dragStart","scrollStart","wrapper","current","scrollLeft","width","clientWidth","scrollTop","height","clientHeight","preventContextMenu","e","preventDefault","window","addEventListener","removeEventListener","togglePicker","prev","handleColorChange","color","hex","getMousePos","canvas","rect","getBoundingClientRect","Math","floor","clientX","left","clientY","top","handleMouseDown","button","startDrawing","handleMouseMove","dx","dy","buttons","draw","handleMouseUp","startMomentum","endDrawing","drawAt","distance","hypot","steps","ceil","i","interpX","interpY","context","getContext","fillStyle","beginPath","arc","PI","fill","step","scrolLeft","abs","requestAnimationFrame","cancelAnimationFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","class","onMouseDown","onMouseUp","onMouseLeave","onMouseMove","onClick","onChange","disableAlpha","_c","$RefreshReg$"],"sources":["D:/Personal_Projects/resume-project/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect} from 'react';\nimport { ChromePicker } from 'react-color';\nimport './utils/pixel-perfect.js';\nimport './App.css';\n\nfunction App() {\n  // Constants handling drawing canvas directly\n  const canvasRef = useRef(null);\n  const canvasContainerRef = useRef(null);\n  const velocity = useRef({ x: 0, y: 0 });\n  const animationFrameID = useRef(null);\n  const [scale, setScale] = useState(1);\n\n  // Constants handling drawing functions\n  const [isDrawing, setIsDrawing] = useState(false);\n  const drawSize = 3;\n  const lastPos = useRef(null);\n\n  // Constants handling colors and color changes\n  const [selectedColor, setSelectedColor] = useState('#000000'); // Init with default to black\n  const [isPickerOpen, setIsPickerOpen] = useState(false);\n\n  // Constants handling drag momentum\n  const isDragging = useRef(false);\n  const dragStart = useRef({ x: 0, y: 0 });\n  const scrollStart = useRef({ x: 0, y: 0 });\n\n  // On load actions\n  useEffect(() => {\n    // Center the canvas\n    const wrapper = canvasContainerRef.current;\n    if (wrapper) {\n      wrapper.scrollLeft = (canvasRef.current.width - wrapper.clientWidth) / 2;\n      wrapper.scrollTop = (canvasRef.current.height - wrapper.clientHeight) / 2;\n    }\n\n    // Prevent context menu\n    const preventContextMenu = (e) => e.preventDefault();\n    window.addEventListener(\"contextmenu\", preventContextMenu);\n    return () => window.removeEventListener(\"contextmenu\", preventContextMenu);\n  }, []);\n\n  // Toggle color picker state\n  const togglePicker = () => {\n    setIsPickerOpen(prev => !prev);\n  };\n\n  // Handles the user selecting a color\n  const handleColorChange = (color) => {\n    // Update selected color for the user globally\n    setSelectedColor(color.hex);\n  };\n\n  // Helper to get mouse position\n  const getMousePos = (e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n\n    // Return mouse coords\n    return {\n      x: Math.floor((e.clientX - rect.left) / scale),\n      y: Math.floor((e.clientY - rect.top) / scale)\n    };\n  };\n\n  // Handle left/right mouse clicks\n  const handleMouseDown = (e) => {\n    if (e.button === 2) { // Right cick\n      e.preventDefault();\n\n      // Always assume click-and-drag\n      isDragging.current = true;\n\n      // Get positions to determine wrapper velocity later\n      dragStart.current = { x: e.clientX, y: e.clientY };\n      const wrapper = canvasContainerRef.current;\n      scrollStart.current = { x: wrapper.scrollLeft, y: wrapper.scrollTop };\n    } else if (e.button === 0) { // Left click\n      startDrawing(e);\n    }\n  };\n\n  // Handle right/left click-and-drag\n  const handleMouseMove = (e) => {\n    if (isDragging.current) {\n      e.preventDefault();\n\n      // Get positional differences\n      const dx = e.clientX - dragStart.current.x;\n      const dy = e.clientY - dragStart.current.y;\n\n      // Set up scrolling variables to allow momentum to keep moving the canvas\n      const wrapper = canvasContainerRef.current;\n      wrapper.scrollLeft = scrollStart.current.x - dx;\n      wrapper.scrollTop = scrollStart.current.y - dy;\n\n      // Keep track of momentum through velocity\n      velocity.current = { x: -dx, y: -dy };\n    } else if (e.buttons === 1) {\n      draw(e);\n    }\n  };\n\n  // Stop click-and-drag events\n  const handleMouseUp = (e) => {\n    if (e.button === 2) {\n      isDragging.current = false;\n      startMomentum();\n    } else if (e.button === 0) {\n      endDrawing();\n    }\n  };\n\n  // Set isDrawing event to true\n  const startDrawing = (e) => {\n    // Set drawing value\n    setIsDrawing(true);\n\n    // Set up interpolation for smoother drawing\n    const { x, y } = getMousePos(e);\n    lastPos.current = { x, y };\n    drawAt(x, y);\n  };\n\n  // Reset isDrawing event to false\n  const endDrawing = () => {\n    // Set drawing value and reset lastPos\n    setIsDrawing(false);\n    lastPos.current = null;\n  };\n\n  // Handles the user drawing on the canvas\n  const draw = (e) => {\n    // Exit function if isDrawing is false\n    if (!isDrawing || e.buttons !== 1) return;\n    // Interpolation calcs (funny math that I totally for sure did without any help)\n    const { x, y } = getMousePos(e);\n    const prev = lastPos.current;\n    if(prev) {\n      // Get difference from current coords to lastPos\n      const dx = x - prev.x;\n      const dy = y - prev.y;\n      \n      // Get a hypotenuse to fill in\n      const distance = Math.hypot(dx, dy);\n\n      // Calculate how many circles are needed to appropriately fill distance\n      const steps = Math.ceil(distance / (drawSize / 2));\n\n      // Interpolate the necessary circles\n      for (let i = 0; i<= steps; i++) {\n        const interpX = prev.x + (dx * i) / steps;\n        const interpY = prev.y + (dy * i) / steps;\n        drawAt(interpX, interpY);\n      }\n    }\n\n    // Update lastPos to current position\n    lastPos.current = { x, y };\n  };\n\n  // Helper function for interpolation w/ circular brush\n  const drawAt = (x, y) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // More circles to fill in gaps\n    context.fillStyle = selectedColor;\n    context.beginPath();\n    context.arc(x, y, drawSize / 2, 0, 2 * Math.PI);\n    context.fill();\n  };\n\n  // Momentum handler\n  const startMomentum = () => {\n    const wrapper = canvasContainerRef.current;\n    let { x, y } = velocity.current;\n\n    // Adjust to tweak downward velocity scaling\n    const step = () => {\n      x *= 0.95;\n      y *= 0.95;\n      wrapper.scrolLeft += x;\n      wrapper.scrollTop += y;\n\n      if(Math.abs(x) > 0.5 || Math.abs(y) > 0.5) {\n        animationFrameID.current = requestAnimationFrame(step);\n      } else {\n        cancelAnimationFrame(animationFrameID.current);\n      }\n    };\n\n    animationFrameID.current = requestAnimationFrame(step);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        Resume Test\n      </header>\n      <div ref={canvasContainerRef} className=\"canvas-container\">\n        <canvas\n          ref={canvasRef}\n          width={5000}\n          height={5000}\n          class=\"pixel-perfect\"\n          className=\"drawing-canvas\"\n          onMouseDown={handleMouseDown}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={endDrawing}\n          onMouseMove={handleMouseMove}\n        />\n      </div>\n      <div className={`color-picker-panel ${isPickerOpen ? 'open' : ''}`}>\n        <div className=\"picker-tab\" onClick={togglePicker}>\n          {isPickerOpen ? '▶' : '◀'}\n        </div>\n        <ChromePicker\n          color={selectedColor}\n          onChange={handleColorChange}\n          disableAlpha\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}